<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qiuhao Jin</title>
    <link>https://qiuhao123.github.io/</link>
    <description>Recent content on Qiuhao Jin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Qiuhao Jin Duke 2021</copyright>
    
	<atom:link href="https://qiuhao123.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Star War Data Acuisiqtion</title>
      <link>https://qiuhao123.github.io/starwar/</link>
      <pubDate>Fri, 23 Oct 2020 22:58:08 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/starwar/</guid>
      <description>Introduction It is extremely important to learn how to accquire data from API using Request Package
Request package Request is a package to retreive data by making http request. I will use the Star War API as an example
Fectch one character from API import requests person = requests.get(&amp;#39;https://swapi.dev/api/people/1&amp;#39;) person.json() The data retrieved from API is in Json format. It will be much clear if the data is in the table format.</description>
    </item>
    
    <item>
      <title>Database Normalization</title>
      <link>https://qiuhao123.github.io/spotify_db_normalization/</link>
      <pubDate>Mon, 05 Oct 2020 16:06:23 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/spotify_db_normalization/</guid>
      <description>Introduction When developing the schema of a relational database, one of the most important aspects of to be taken into accountis to ensure that duplication is minimized. There are two reasons:
 reduce the amount of required storage for data avoid unecessary data conflict that can be casued by the data duplication  Normalization in Database database normalization is one of the technique that can ensure the above two points. The core idea of database normalization is to divide the table into smaller subtables and store pointers to the data rather replicating it.</description>
    </item>
    
    <item>
      <title>Home_price</title>
      <link>https://qiuhao123.github.io/home_price/</link>
      <pubDate>Mon, 28 Sep 2020 09:12:47 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/home_price/</guid>
      <description>Introduction Housing price are an an important Reflection of the economy, and housing prices ranges are of great interest for both buyers and sellers. In this project, house price index will be predicted given serveral indicator variables. The goal of this project is to create a regression model that are able to estimate the house index given the features and provide any interesting business insight within the dataset
Data Acquisition This dataset is from Dr.</description>
    </item>
    
    <item>
      <title>Malaria</title>
      <link>https://qiuhao123.github.io/malaria/</link>
      <pubDate>Wed, 16 Sep 2020 15:45:57 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/malaria/</guid>
      <description>Introduction the objective of this blog is to demostrate three informative visualization about Malaria from the dataset
I mainly focus on two datasets:
 Malaria_death_age.csv which describe number of Malaria deaths incidence from 1990 until 2016 over 200 countries across different age groups Malaria_death.csv which describe Malaria deaths by over 200 countries for all ages across the world and over time  Visualization 1 First, I would like to understand which age group has the highest number of malaria death from 1990 to 2016.</description>
    </item>
    
    <item>
      <title>Introduction to Time Series Forecasting</title>
      <link>https://qiuhao123.github.io/introduction_to_time_series_forecasting/</link>
      <pubDate>Wed, 09 Sep 2020 15:20:50 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/introduction_to_time_series_forecasting/</guid>
      <description>why forecast?
Becasue, forecasting a time series has tremendous value. In the ad analysis project, predicting the number of impression for different ads can drive a company&amp;rsquo;s decision on how to spend their money on ads.
Forecasting can be divided into two parts:
 Univeriate Time Series Forecasting: if you only use the previous value of a time series to predict the future value multivariate Time Series Forecasting: if you use external variables to forecast the future value.</description>
    </item>
    
    <item>
      <title>Ad Analysis</title>
      <link>https://qiuhao123.github.io/ad-analysis/</link>
      <pubDate>Tue, 08 Sep 2020 20:10:37 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/ad-analysis/</guid>
      <description>Introduction Optimizing ads is one of the most intellectually challenging jobs as a data scientist can do. It is a complex problem given a huge size of the observations as well as number of features that can be used. The goal of this project is to take a look at several ad campaigns and analyze the performance and predict the future performance.
Challenge Description company XYZ is a food delivery company, in order to get customers, they rely significantly on online ads, such as Google or Facebook.</description>
    </item>
    
    <item>
      <title>Euler-Project</title>
      <link>https://qiuhao123.github.io/euler-project/</link>
      <pubDate>Mon, 07 Sep 2020 09:12:37 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/euler-project/</guid>
      <description>The euler project is a website that contains interesting problem that can be solved with mathmatical computation. In this post I will go through several examples and my deatailed answers.
Largest Palindrome Product A palindrome number reads the same both ways. For example: 1001, 2002, 3443, 4444. And the largest palinrome can be made from the product of two 2-digit number is 9009 = 91*99. The question is to find the largest palindrome made from the product of two 3-digit numbers.</description>
    </item>
    
    <item>
      <title>Build a personal website with Hugo </title>
      <link>https://qiuhao123.github.io/personal_website_blog/</link>
      <pubDate>Sun, 23 Aug 2020 11:57:02 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/personal_website_blog/</guid>
      <description>Introduction to HUGO and GitPage Hugo is one of the most popular open-source static generator and is written in GO. It is simple and easy to deploy.
Github Pages is a static web hosting service provided by Github which provides convenient deployment directly through Github repository.
The following intruction is suitable on Mac.
STEP 1: Installation install Hugo
open your terminal, run the following command:
brew install hugo
check the hugo version, run the following command:</description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://qiuhao123.github.io/blog/</link>
      <pubDate>Tue, 18 Aug 2020 14:30:32 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/blog/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://qiuhao123.github.io/contact/</link>
      <pubDate>Tue, 18 Aug 2020 14:30:25 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/contact/</guid>
      <description>Name: Qiuhao Jin
School: Duke University
Department: Electrical and Computer Engineering
email: qj11@duke.edu</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://qiuhao123.github.io/about/</link>
      <pubDate>Tue, 18 Aug 2020 14:28:37 -0400</pubDate>
      
      <guid>https://qiuhao123.github.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>